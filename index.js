
/*****************************************************************************************						
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXd:'...,lONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO,        .dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNc          'OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWo          ;KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWXOkkO0NMNd'      .:0WWX0kkOKNWMMMWWMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMWNXKOkoc,.    .:KMWXl    .kNWWx'    ..;ldk0KXWWMMMMMMMMMMMMMMMMMMMMM
W0dddddooooollllccc::;,'..            ,kXNd.   ,KNKd.           ...';;::ccclllooooodddddkX
WO,                                     .ld.   ;x;.                                    .lX
MWKd;....                                ;o.   ;o.                               ....':kNM
MMMMWXKK0c                               ;o.   ;o.                              .xK0KNWMMM
MMMMMMMMMXd:,''.                         :d.   ;o.                        .''',cOWMMMMMWMM
MMMMMMMMMMMWWNNK:                        :d.   :o.                       .dNNNWWMMMMMMMMMM
MMMMMMMMMMMMMMMMXx;....':dc.             ;d.   ;o.             'oo;....'cOWMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMWMWXK0KNWMNOc'.        ..lx.   ;x;.         .;oKWMWXK0KNWMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMWMMMMMWMMWN0kxdddxkO0KNx.   ;XNK0OxxddxxkKWMMMMMMMWWMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMN0xlc:;,,,;:lONMMk.   :XMMXxl:;;:::lox0NMMMMMWMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMNx;.            :KMk.   :XNx'           .,dXWWMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMNo      ..        cNk.   :Xk.               :KMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMM0'    .xK0d;.    .dNk.   :NO'     .:xOO;     dMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMK;    .cONMWKOkOOKWMO.   :NWXOxxxOXWWXx'    .xMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMWO'     .':ldO0KNWMM0c,,,dNMMWWXKOxl:.     .oNMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMM0c.        .:dOOkxollllllc:;,..         ,kWMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMW0o,.  .:odo:'.                     .ckNWMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMN0doxd,.                    ..;lkXWMMWMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO;          ....'',,;:looooxKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO'      .;oxxolllkNWKd:;,..  cXMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMNc       cNWMO.   cNMWx.      .kWMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMX;       :XMM0'   cNMNd.      .kWMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMWo.       ;xKO;.,;xXk:.       :XMWWMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNd'     .,ck0dool:.        .oXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXx;':dxdl;.           .;dKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMNOo;.          ..;coxXMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKo.       .;::clllc;..cKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0;      .lxdc:;lo'      ;0MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWo      .xW0,   lWXc      lWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWd.      :K0,  .xWK:      oWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXo.    .'o0dllll;.      ;KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNOc';looc,..         .oXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWKd;.         .':cdXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK:      .;:cc:::;':KWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWo     ,do:;,:'    .xMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNc     l0l;c::.    .kMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0, .;cll:'..      cXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXxoc'          'oXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWd.     ..';::cc;oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN:    ;l::cc,.   :XMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO,  .oc,::'    ;0MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXx:col,.. .'ckNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMNOl,..';:::::oKWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOl;,:odl;,':oc,..:kNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKxd0NWMK,   lWMNXOxONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMX:   oMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWl  .xMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd. '0MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO'.:XMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
******************************************************************************************/



const fs = require('node:fs'); //fs is Node's native file system module. 
const { Client, Collection, Intents, MessageButton } = require('discord.js'); //Collection is a class that extends JavaScript's native Map class, and includes more extensive, useful functionality.
const { token } = require('./config.json'); //authtoken stored in config.json

const client = new Client({ intents: [Intents.FLAGS.GUILDS] }); //create new client to  login

client.commands = new Collection(); //create collection to fill with commands
const commandFiles = fs.readdirSync('./commands').filter(file => file.endsWith('.js')); //read all the command files

for (const file of commandFiles) {
	const command = require(`./commands/${file}`);
	// Set a new item in the Collection
	// With the key as the command name and the value as the exported module
	client.commands.set(command.data.name, command);
}

client.once('ready', () => { //log 'read' in console to show bot should be online
	console.log('Ready!');
});

//Slash Commands
client.on('interactionCreate', async interaction => { 

	if  (!interaction.isCommand()) return;

	const command = client.commands.get(interaction.commandName);

	if (!command) return;

	console.log(command.data.name + " request at " + interaction.guild);

	try {
		await command.execute(interaction);
	} catch (error) {
		console.error(error);
		await interaction.reply({ content: 'There was an error while executing this command!', ephemeral: true });
	}
});


client.login(token);